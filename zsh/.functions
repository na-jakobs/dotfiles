# functions (to avoid " escaping issues in aliases)
ghlatestrun() {
	run_id=$(gh run list --limit 1 --json databaseId | jq -r '.[0].databaseId')

	# If we couldn't get a run ID, exit with an error
	if [[ -z "$run_id" ]]; then
	    echo "Could not get a run ID"
	else
	    gh run view --log $run_id
	fi
}

jirame() {
	jira issue list -a $(jira me) --order-by rank --reverse -s~Done --plain
}

klistimages() {
	kubectl get pods --all-namespaces -o jsonpath="{.items[*].spec['initContainers', 'containers'][*].image}" |\
	tr -s '[[:space:]]' '\n' |\
	sort |\
	uniq -c
}

klistpodimages() {
	kubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{"\n"}{.metadata.name}{":\t"}{range .spec.containers[*]}{.image}{", "}{end}{end}' | sort
}

ports () {
	netstat -Watnlv | grep LISTEN | awk '{"ps -ww -o args= -p " $9 | getline procname;colred="\033[01;31m";colclr="\033[0m"; print colred "proto: " colclr $1 colred " | addr.port: " colclr $4 colred " | pid: " colclr $9 colred " | name: " colclr procname;  }' | column -t -s "|"
}

# jira browse: jb jira-12345
jb(){
   open https://jira.ngage.netapp.com/browse/"$@"
}
